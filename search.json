[{"title":"简易博客搭建：hexo+gitpages+picgo+typora","path":"/2024/02/15/简易博客搭建：hexo+gitpages+picgo+typora/","content":"博客在2024年可能已经是一个古老的名词了，大家都早已习惯从抖音、小红书、B站、知乎等各类APP上获取信息了，但是所有的社区用户都受困与审核、信息茧房以及越来越极端的网络环境，一个独属于自己的、自由的小花园愈发可贵。 更何况作为程序员，一个技术博客也是很好的整理、反思和交流的方式 本文会详细介绍如何用hexo+github pages+picgo+typora实现0成本、易上手、无写作门槛的个人博客。 hexo快速入门hexo官方中文文档：Hexo 安装安装前提 Node.js Git 安装hexo1234$ npm install -g hexo-cli//安装成功后查看versionhexo version 建站hexo的使用非常简单 123$ hexo init &lt;folder&gt;//所有文件会在&lt;folder&gt;下自动创建$ cd &lt;folder&gt; 建成后目录结构如下 12345678.├── _config.yml├── package.json├── scaffolds├── source| ├── _drafts| └── _posts└── themes _source&#x2F;_posts里就是博客内容，一篇博客就是一个markdown文件 最初里面只有一个hello-world.md文件 hexo提供了简单的命令将md文件转成静态页面 12345//生成静态页面hexo g//本地查看静态页面hexo s 浏览器访问http://localhost:4000 就可以打开博客了，现在里面只有一篇文章，_source&#x2F;_posts下的hello-world.md 部署gitpages现在我们还只能在本地访问自己的博客，但个人博客最终一定是要部署到互联网上让所有人都能看到的，就像所有人都能访问www.baidu.com 一样 通过GitHub Pages可以很轻易的实现 在github上新建一个仓库，名为username.github.io !注意:这里的仓库名不要轻易改变，会影响到最终的博客网址，标准设置的仓库名最终可以简单的通过https://username.github.io/ 访问，否则访问地址会是全路径还可能导致css样式失效等等问题 然后修改 _config.yml 文件，找到 Deployment 123456# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repo: &#x27;替换为github仓库的ssh地址&#x27; branch: master 更复杂的需求见官方文档：配置 | Hexo 最后安装hexo-deployer-git插件，用于将blog部署到 GitHub 上面 1npm install hexo-deployer-git --save 部署在 blog 目录下，分别输入如下三条命令： 1234567hexo clean //清除缓存//生成的静态文件在public文件夹下hexo g //生成静态文件//部署就是把生成的静态文件上传到上面的github仓库里hexo d //部署 最后进入settings界面，开启github pages 访问https://username.github.io/即可 总结写作流程非常简单 在_source&#x2F;_posts文件夹下创建markdown文件 hexo g生成静态页面 hexo s本地预览页面是否正常（GitHub pages会自动更新，但是更新有延迟，所以日常建议先本地预览，再deploy到GitHub） hexo d将静态页面上传到github 仓库 访问github pages 个性化hexo提供了丰富的主题插件：Themes | Hexo 主题作者都提供了详细的安装说明和演示页面，这里不再赘述 我用的是stellar：Stellar：开始您全新的博客之旅 - XAOXUU 图床：PicGo+GitHubmarkdown不是MS word那样的富文本编辑器，markdown文件是不能内嵌图片的，只能通过链接的方式引用 一般本地写作markdown都需要用一个额外的文件夹保存png&#x2F;jpg文件，然后通过相对路径或者绝对路径引用 但是部署在网上的博客是不存在本地文件夹的，所以需要一个互联网上的文件夹，也就是图床 这里同样用github pages搭建一个免费0成本的图床 配置github 创建github 仓库 仓库里添加一个简单的index.html文件，否则不会提供GitHub pages的功能 开启GitHub pages 配置PicGo 下载PicGo PicGo is Here | PicGo 配置github 图床 需要访问 https://github.com/settings/tokens 获取token 上传一张图片测试 图片上传完成之后会返回一个markdown的可用链接，直接粘贴到markdown编辑器中就可以预览图片了 配置typora但是这样一个一个手动上传图片然后粘贴到markdown编辑器里太麻烦了 个人推荐使用typora，提供了集成PicGo的功能，无需任何额外操作，直接粘贴图片，typora会自动上传图片、转换图片路径为图库路径、所见即所得，非常好用 写作Front-matter | Hexo 文章标签、分类在新建的文章开头编辑文章的题目，作者，日期，标签等。 12345678910---title: testdate: 2020-10-17 17:24:36author: hiyocopyright: truetags: - 标签1 - 标签2categories: 分类--- typora中建议在源码模式下进行编辑这部分内容 子分类将该文章放到 Sports&#x2F;Baseball 这个分类下。 123categories: - Sports\t- Baseball 或者： 12categories:\t- [Sports,Baseball] 多个分类将文章同时分到两个或者多个不同的类目下 123456categories: - [Sports] - [Play]categories: - [Sports,Baseball] - [Play] 总结hexo+gitpages+picgo+typora基本可以实现0部署成本+低写作门槛，不过个人博客的意义还是在于内容本身，我今后也会把学习工作中的心得和文档整理到博客上分享交流，立个小flag，三天一更新。"},{"title":"Hello World","path":"/2024/02/15/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment"}]